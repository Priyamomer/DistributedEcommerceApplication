spring.application.name=Gateway
server.port=1000

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:9000/eureka

#Request Routing mappings
# /products/* --> productService
# /userservice/* --> userservice

spring.cloud.gateway.routes[0].id=productserviceforwarding
spring.cloud.gateway.routes[0].predicates[0]=Path=/products
spring.cloud.gateway.routes[0].uri=lb://productservice
spring.cloud.gateway.routes[0].filters[0]=TokenRelay=Bearer


spring.cloud.gateway.routes[1].id=orderserviceforwarding
spring.cloud.gateway.routes[1].predicates[0]=Path=/cart/*
spring.cloud.gateway.routes[1].uri=lb://orderservice




spring.main.web-application-type=reactive

#management.endpoints.web.exposure.include[]=*

spring.cloud.loadbalancer.ribbon.enabled=false

spring.security.oauth2.client.registration.gateway.provider=my-provider
spring.security.oauth2.client.registration.gateway.client-id=productService
spring.security.oauth2.client.registration.gateway.client-secret=productServiceSecret
spring.security.oauth2.client.registration.gateway.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.gateway.scope[0]=openid
spring.security.oauth2.client.registration.gateway.scope[1]=emails
spring.security.oauth2.client.registration.gateway.redirect-uri=http://localhost:1000/login/oauth2/code/{registrationId}
#
spring.security.oauth2.client.provider.my-provider.issuer-uri=http://localhost:2000
spring.security.oauth2.client.provider.my-provider.authorization-uri=http://localhost:2000/oauth2/authorize
spring.security.oauth2.client.provider.my-provider.token-uri=http://localhost:2000/oauth2/token
#
#spring.main.allow-bean-definition-overriding=true